# .github/workflows/deploy.yml
name: Deploy MCP Server

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' # Or your preferred Node.js version

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      # Assuming your React app is in the root or a 'web' directory
      # Add build steps for your React app if necessary
      # - name: Install Frontend Dependencies
      #   run: npm ci --prefix web # Or your frontend directory
      # - name: Build Frontend
      #   run: npm run build --prefix web # Or your frontend directory

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          projectId: camera-calibration-beta # Replaced placeholder
          channelId: live
          # target: your-hosting-target # Optional: specify if you have multiple hosting sites

      # Assuming your Firebase functions are in the 'functions' directory
      - name: Install Functions Dependencies
        run: npm ci --prefix functions

      - name: Build Functions (if using TypeScript)
        run: npm run build --prefix functions

      - name: Deploy Functions
        run: firebase deploy --only functions --project camera-calibration-beta --token "${{ secrets.FIREBASE_TOKEN }}" # Using FIREBASE_TOKEN for CLI auth
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }} # Requires FIREBASE_TOKEN secret

      # Add deployment steps for the Python MCP server (mcp_server.py) if needed
      # This might involve deploying to Cloud Run, App Engine, or another service
      # - name: Deploy Python MCP Server
      #   run: |
      #     # Example: Deploy to Cloud Run
      #     gcloud run deploy mcp-server --source . --region your-region --allow-unauthenticated --project camera-calibration-beta
